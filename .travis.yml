branches:
  except:
    - gh-pages

language: cpp

os:
  - linux
  - osx

compiler:
  - clang
  - gcc

env:
  global:
    - NUPIC=$TRAVIS_BUILD_DIR
    - PATH=$TRAVIS_BUILD_DIR/python/bin:$PATH

matrix:
  # This excludes OSX builds from the build matrix for gcc and Python 2.6
  exclude:
    - os: osx
      compiler: gcc

# Successful builds are archived and uploaded to S3 for regression testing.
before_deploy:
  - . ./ci/travis/before_deploy.sh

# S3 deployment of NuPIC and dependency wheels on every push to master. These
# packages are used in dependent projects like nupic.regression and
# nupic.research.
deploy:
  provider: s3
  access_key_id: AKIAIGHYSEHV3WFKOWNQ
  secret_access_key:
    secure: "ONG00ZCPpfU/nugFiON3K2q8IMk3nB/aAUj2Ggjf1z0CJS/cvnfIexmJhe+DJCccoco2l5gpiqp7gweH5vXEcyrzTt1I3Z+iFNas2cQ/wF3LjW0NcbdGeC9NN9kGIoOvr8g6L66CUvazYoirgbJO01ktm7LVNeGS3Q1pk36Vp10="
  bucket: artifacts.numenta.org
  region: us-west-2
  local-dir: "dist/wheels"
  upload-dir: "numenta/nupic/${TRAVIS_COMMIT}"
  skip_cleanup: true
  # Only deploy on master from linux/clang job
  on:
    branch: master
    condition:
      - "$TRAVIS_OS_NAME == linux"
      - "$CC == clang"

# Pypi deployment happens only for release tags.
deploy:
  provider: pypi
  user: numenta
  password:
    secure: "Rba43HiztHRypL9UnsqxP3Cy34hOq7Y7rJdAgXRv9W+s4UEJ4jgnZTE50eNHSXF8owWGzEZcGiMhQCB7Ta3eZ/y+Wj6DhtG4Uhcs4WRrXUwHmcNbl99yFcews9Raj+rv7ajTWy8odMDGsJDvPEndz8pef0AvB3cTVq8Xv8/g860="
  distributions: "bdist_wheel"
  skip_cleanup: true
  # Only deploying from clang jobs.
  on:
    tags: true
    condition:
      - "$CC == clang"

git:
  submodules: false

notifications:
  irc:
    channels:
      - "irc.freenode.net#nupic-hackers"
  webhooks:
    urls:
      - http://issues.numenta.org:8081/travis
      - https://webhooks.gitter.im/e/68f77bae61efa5c931f8

before_install:
  # install gcc-4.8 for C++11 compatibility, #TODO remove when Travis has gcc>=4.8, (it's used for clang too, in coveralls)
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; sudo apt-get -qq update; sudo apt-get -qq install g++-4.8; alias gcc='gcc-4.8'; alias g++='g++-4.8'; fi"
  - "if [ $CC = 'gcc' ]; then export CC='gcc-4.8'; export CXX='g++-4.8'; fi"
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then . ./ci/travis/before_install-linux.sh; fi"
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'osx' ]; then . ./ci/travis/before_install-osx.sh; fi"

install:
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then . ./ci/travis/install-linux.sh; fi"
  - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'osx' ]; then . ./ci/travis/install-osx.sh; fi"

script:
  - . ./ci/travis/script-run-tests.sh

after_success:
 - cd ${TRAVIS_BUILD_DIR}
 - "if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then . ./ci/travis/after_success-report-coverage-linux.sh; fi"
